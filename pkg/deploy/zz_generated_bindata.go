// Code generated for package deploy by go-bindata DO NOT EDIT. (@generated)
// sources:
// manifests/ccm.yaml
// manifests/coredns.yaml
// manifests/local-storage.yaml
// manifests/metrics-server/aggregated-metrics-reader.yaml
// manifests/metrics-server/auth-delegator.yaml
// manifests/metrics-server/auth-reader.yaml
// manifests/metrics-server/metrics-apiservice.yaml
// manifests/metrics-server/metrics-server-deployment.yaml
// manifests/metrics-server/metrics-server-service.yaml
// manifests/metrics-server/resource-reader.yaml
// manifests/rolebindings.yaml
// manifests/traefik.yaml
// +build !no_stage

package deploy

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ccmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x3f\x6f\xe3\x30\x0c\xc5\x77\x7d\x0a\x21\x4b\x80\x03\x9c\xe0\xb6\x83\xc7\xeb\xd0\x3d\x40\xbb\xd3\x12\x9b\xa8\x91\x45\x81\xa4\x1c\xb4\x9f\xbe\x70\x9c\x16\x81\xdd\xfc\x71\x36\xc2\x20\x7f\xef\xd1\xd4\x83\x1c\x5e\x91\x25\x50\xaa\x2d\x37\xe0\x56\x50\x74\x47\x1c\x3e\x41\x03\xa5\xd5\xfe\x9f\xac\x02\xad\xbb\xbf\x66\x1f\x92\xaf\xed\x53\x2c\xa2\xc8\x1b\x8a\x68\x5a\x54\xf0\xa0\x50\x1b\x6b\x13\xb4\x58\x5b\x17\xa9\xf8\xca\x51\x52\xa6\x18\x91\xab\x16\x12\x6c\x91\x0d\x97\x88\x52\x9b\xca\x42\x0e\xcf\x4c\x25\x4b\x3f\x54\x59\x47\xc4\x3e\xa4\x73\x2d\x63\x2d\xa3\x50\x61\x87\xa7\xa6\x88\x20\x28\xc6\xda\x0e\xb9\x39\x7d\xdb\xa2\x0e\x00\x46\x50\x3c\x96\x25\xfb\xbe\x9c\x68\x2c\x16\x53\x24\x76\x98\x74\x84\x3c\x43\x65\x50\xb7\x9b\x0d\x4d\xe4\xc7\x36\x97\x7f\x96\x33\x66\xd7\xa2\xa0\x65\x84\x18\xbc\xdc\x05\x11\xe4\x2e\xb8\xb1\x87\x18\x44\x7f\xdf\xaa\x2f\x0f\xb3\xf1\xe0\x1c\x95\x4b\x7f\xef\x2e\x50\xee\x1f\x9c\x28\x26\xed\x28\x96\xf6\xd2\x6d\x7f\x8c\x3f\x66\x17\x93\xcf\x14\xae\x9d\x79\x22\x74\x98\xdc\xbd\xaa\xcc\xe3\x09\xf9\x1f\x92\x0f\x69\x3b\x2b\x28\x14\x71\x83\x6f\x7d\xe7\xf7\x8a\x57\x54\x8d\xb5\xd3\x58\xde\xd4\x90\xd2\xbc\xa3\xd3\x63\x1e\x87\xf1\x17\x41\xbe\x3d\x37\x34\x48\x06\x87\xb5\xdd\x97\x06\x2b\xf9\x10\xc5\xd6\x7c\x05\x00\x00\xff\xff\xff\xea\xf1\x4c\x44\x04\x00\x00")

func ccmYamlBytes() ([]byte, error) {
	return bindataRead(
		_ccmYaml,
		"ccm.yaml",
	)
}

func ccmYaml() (*asset, error) {
	bytes, err := ccmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ccm.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _corednsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\xdf\x6f\xdb\x38\x12\x7e\xf7\x5f\x41\xe8\xd0\xb7\x93\x13\x5f\xd0\x36\xc7\xb7\x36\xc9\xb5\x01\x1a\xd7\x88\x93\xbe\x1c\x16\xc5\x98\x1a\x5b\xdc\x50\x1c\x2e\x49\xb9\xf1\x76\xf3\xbf\x2f\xa8\x5f\x26\x1d\xa5\x48\x83\xae\x5e\x2c\x72\x38\xdf\x8c\x3e\x0e\x3f\x8e\xc1\xc8\x2f\x68\x9d\x24\xcd\xd9\x76\x36\xb9\x93\xba\xe0\x6c\x89\x76\x2b\x05\xbe\x13\x82\x6a\xed\x27\x15\x7a\x28\xc0\x03\x9f\x30\xa6\xa1\x42\xce\x04\x59\x2c\xb4\xeb\xc6\xce\x80\x40\xce\xee\xea\x15\xe6\x6e\xe7\x3c\x56\x93\x3c\xcf\x27\x31\xb4\x5d\x81\x98\x42\xed\x4b\xb2\xf2\x4f\xf0\x92\xf4\xf4\xee\xd4\x4d\x25\x1d\x6d\x67\x2b\xf4\xd0\x47\x3e\x53\xb5\xf3\x68\xaf\x49\x61\x12\x56\xc1\x0a\x95\x0b\x6f\xac\x89\x63\x35\x7a\x6c\xfc\x57\x44\xde\x79\x0b\xc6\x48\xbd\x69\x03\xe5\x05\xae\xa1\x56\xde\x0d\xf9\xb6\x59\xf1\x3e\x6d\x5b\x2b\x74\x7c\x92\x33\x30\xf2\x83\xa5\xda\x34\xc8\x39\xcb\xb2\x09\x63\x16\x1d\xd5\x56\x60\x37\x87\xba\x30\x24\x75\x03\x96\x33\xd7\x32\xd3\x0e\x0c\x15\xed\xcb\x40\x42\x18\x6e\xd1\xae\x3a\x5f\x25\x9d\x6f\x5e\xbe\x81\x17\xe5\xf3\xe2\x69\x2a\x0e\x61\x36\xe8\x7f\x05\xa1\xef\xa5\x2e\xa4\xde\x24\xbc\x82\xd6\xe4\x1b\xf7\x8e\xdc\x31\xdc\x84\x6f\xa8\x3d\xd5\xa6\x00\x8f\x9c\x65\xde\xd6\x98\xfd\xfa\xed\x21\x85\xd7\xb8\x6e\xf2\xeb\x08\xfb\xc1\x07\x4f\x18\x7b\x5c\x3b\x4f\x20\xbb\x7a\xf5\x3b\x0a\xdf\xec\xfd\x68\xa9\xbf\xb8\xc0\x87\xb3\x73\x46\x7a\x2d\x37\x57\x60\x5e\x72\x6c\xfa\xe5\x67\x64\x71\x2d\x15\x72\xf6\x57\xc3\xe9\x94\xbf\x3e\x61\xdf\x9b\xd7\xf0\xa0\xb5\x64\xdd\x30\x2c\x11\x94\x2f\x87\xa1\x45\x28\x76\xc3\x68\xbf\x1d\xec\xd5\xf7\xb3\x4f\xb7\xcb\x9b\x8b\xeb\xaf\xe7\x9f\xaf\xde\x5d\xce\x1f\x5e\x31\xa9\x73\x28\x0a\x3b\x05\x6b\x80\x49\xf3\xa6\x7d\xd9\x47\x62\x4d\x91\x33\xa9\x1d\x8a\xda\x62\x34\xbf\x06\xa5\x7c\x69\xa9\xde\x94\xe3\x28\xc3\xda\x87\x7d\xa2\xe4\xbc\x63\x47\xe8\xc5\x51\x47\xc5\xd1\x9c\x0a\xfc\xd8\x4c\xc7\x41\xbd\x57\xec\xcd\x71\x34\x61\x51\x11\x14\x6c\xf6\xda\x8d\xa7\x30\x12\xcc\x58\xaa\xd0\x97\x58\x3b\xc6\xff\x3b\x7b\x7d\x32\x18\xd6\x64\xbf\x81\x2d\xd8\xb4\xcd\x24\x9c\x3f\xb5\x9d\x0a\xd2\xeb\x61\x89\x00\x51\x22\x3b\xd9\x67\xa0\x88\xcc\x24\x4d\x26\xb2\x41\xb1\x02\x05\x5a\xb4\xfc\x3c\x3c\x2a\x0e\x30\xc6\x1d\x0d\x15\x72\x8e\x46\xd1\xae\xc2\x97\x29\xeb\xc1\x61\x3b\x75\x39\x18\xd3\x2d\x69\x1d\x0f\x8f\x60\x0b\x9c\x85\x9a\x3a\x9f\x2f\xb3\x89\x33\x28\x82\xf7\xbf\x2c\x1a\x25\x05\x38\xce\x66\x13\xc6\xc2\x29\xf5\xb8\xd9\xb5\xc0\x7e\x67\x90\xb3\x6b\x52\x4a\xea\xcd\x6d\x73\xde\x5b\x7d\x88\x67\x78\xc7\x41\x05\xf7\xb7\x1a\xb6\x20\x15\xac\x42\xd1\x36\x70\xa8\x50\x78\xb2\xed\x9a\x2a\x08\xe0\xa7\x28\xf1\xf1\xd4\x3d\x56\x46\x0d\xc0\x31\x3b\x0d\xd1\x89\xff\x53\x1f\xdf\x7f\x5e\x5b\x03\x92\xac\xf4\xbb\x33\x05\xce\xcd\x5b\x1e\x5a\x1e\x73\xd1\xaa\x45\x2e\xac\xf4\x52\x80\xca\x3a\x17\x97\x08\xc2\xfc\x60\x53\x1a\x6a\x48\xa1\x8d\x35\x33\x3c\x39\xbb\xc3\x5d\x60\xb9\x83\x7b\x57\x14\xa4\xdd\x67\xad\x76\x59\x54\xb1\x64\x82\x27\x59\xce\xb2\x8b\x7b\xe9\xbc\xcb\x1e\x01\x04\xfd\xcf\x83\x02\x1e\xe8\x6e\x05\x21\xdd\x67\x82\x31\x86\xeb\x35\x0a\xcf\x59\x36\xa7\xa5\x28\xb1\xa8\x15\xf6\xe6\x10\x61\x99\xec\x4e\x78\xc2\xa5\x71\x10\x92\x1c\x67\x4a\xea\xfa\xbe\x5b\x24\x48\x7b\x90\x1a\xed\xf0\xdd\xf9\xa3\xaa\x6d\x1f\x59\xc1\x06\x39\xb3\xa0\x45\x89\xb6\x3f\xec\x79\xf7\xcb\x67\xd3\xb7\xd3\x59\xba\x78\x51\x2b\xb5\x20\x25\xc5\x8e\xb3\xcb\xf5\x9c\xfc\xc2\xa2\xc3\x46\x91\xfb\x43\x17\x5d\x93\xc3\xd1\x93\x95\xf4\xc9\x4c\xa8\x9a\x8a\xec\x8e\xb3\xd9\xdb\xe3\x2b\x99\x48\xc8\x1f\x35\xba\xc3\xd5\xc2\xd4\x9c\xcd\x8e\x8f\xab\x51\x8c\x04\x02\xec\xc6\x71\xf6\x7f\x96\xe5\x41\x2b\xb2\x7f\xb3\x2c\x51\xb2\x5e\xb3\x33\xf6\xdb\xe0\xb2\x25\x55\x57\x78\x15\x2a\x29\xa9\x95\x9e\xb5\x70\x55\xe4\xed\xa2\x28\x7e\x15\xd6\x2f\xc0\x97\x3c\xd1\xca\xe4\x5b\xa0\x08\xb5\xc5\x59\xb8\x81\xf7\x92\x47\x36\x8d\x33\xec\xd8\x82\xac\xe7\x2c\x12\xc1\x5e\x6f\x52\x5c\x63\xc9\x93\x20\xc5\xd9\xed\xf9\xe2\x67\x71\x72\x2f\xcc\x28\xd6\xcd\xd9\x0f\xb0\x12\x69\xee\xd1\x2a\xf4\x56\x8a\xf1\xcc\x62\xb4\xe6\x56\x0a\xe7\x9b\xb4\xc7\x7b\x1f\x6f\x2d\x28\x45\xdf\x16\x56\x6e\xa5\xc2\x0d\x5e\x38\x01\xaa\x39\xb3\x3c\x5c\x1b\x2e\xa6\x5b\x80\x81\x95\x54\xd2\x4b\x3c\x28\x0e\x28\x8a\x74\x22\x67\xf3\x8b\x9b\xaf\xef\x2f\xe7\xe7\x5f\x97\x17\xd7\x5f\x2e\xcf\x2e\x12\x73\x61\xc9\x1c\x3a\x80\x52\x23\x1b\x77\x4d\xe4\xff\x27\x15\x76\xfd\x49\xba\x8d\x4a\x6e\x51\xa3\x73\x0b\x4b\x2b\x8c\xf1\x4a\xef\xcd\x07\xf4\x69\x08\xd3\x16\xca\x41\x13\xc0\xba\x72\xe0\xec\xf4\xf8\xf4\x38\x99\x76\xa2\xc4\x40\xf2\xc7\x9b\x9b\x45\x64\x90\x5a\x7a\x09\xea\x1c\x15\xec\x96\x28\x48\x17\x8e\xa7\x97\xb0\x41\x2b\xa9\x18\x6c\xb3\xd8\xe6\x65\x85\x54\xfb\xbd\x31\xb2\xb9\x5a\x08\x74\xee\xa6\xb4\xe8\x4a\x52\x45\x6a\x5d\x83\x54\xb5\xc5\xc8\x7a\x92\xb4\x32\xf2\xa7\xa9\x48\x1b\xa0\x88\x89\xd9\xe9\xec\xc5\x4c\xfc\x80\x88\xff\xfc\xc3\x3c\x14\xda\xf5\xd2\x78\xde\xb6\xce\x9d\xa1\x55\x8e\x9f\x50\x16\xd1\x37\xa7\x29\x6f\xe3\x22\xde\x50\xe1\xb1\x72\x87\x25\xdd\x5c\x54\xbd\xdc\x25\xb6\x7e\x0b\x46\x8d\x9d\xe3\xd0\xf1\x8d\x7a\xee\xad\x4f\x76\xd8\x5d\xcb\x3e\xd2\x3c\x45\x7d\xc0\x93\xdd\xd3\xa3\x7f\x3c\xfb\x3e\x31\xdc\x79\x6d\xa5\x64\x41\x95\xb2\x11\xb3\x13\x16\xcc\x93\xff\x7c\x9e\xd1\x8c\xf5\x6d\x47\xd7\x66\x44\x48\xcf\x6d\xdb\xd2\xc6\x6a\x2c\x66\x17\xe3\x72\xc1\xe3\x96\x7f\xbe\x7c\x78\x35\x89\xee\x88\xfc\xe0\x06\x30\xb1\xb4\x1f\x5e\x04\xf9\x88\xcc\x3f\xe1\xd0\xea\x73\x3e\xa2\xe4\x26\x15\xfc\xd4\xe5\xef\x00\x00\x00\xff\xff\x17\xf4\x4c\xa9\x89\x10\x00\x00")

func corednsYamlBytes() ([]byte, error) {
	return bindataRead(
		_corednsYaml,
		"coredns.yaml",
	)
}

func corednsYaml() (*asset, error) {
	bytes, err := corednsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coredns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localStorageYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\xbe\xeb\x57\x10\x04\xf6\x52\x2c\xe5\x35\xda\x43\xc1\x9b\xeb\xc7\x6e\x00\xbf\x60\xa7\xed\x21\x58\x18\x14\x35\xb6\xb9\xa1\x48\x82\xa4\xd4\x75\xb7\xf9\xef\x05\xf5\x70\x24\xcb\x49\x1c\x14\xe5\xc5\xf0\x70\x66\xbe\x79\x7c\x33\x14\x33\xe2\x0f\xb0\x4e\x68\x45\x51\x31\x8c\x1e\x85\x4a\x29\xda\x82\x2d\x04\x87\x11\xe7\x3a\x57\x3e\xca\xc0\xb3\x94\x79\x46\x23\x84\x14\xcb\x80\x22\xa9\x39\x93\xc4\x30\x7f\x24\xc6\xea\x42\x04\x7b\xb0\xc4\x55\x76\x84\xd5\x86\x95\xba\x33\x8c\x03\x45\x8f\x79\x02\xc4\x9d\x9c\x87\x2c\x22\x84\x44\x6d\x64\x9b\x30\x1e\xb3\xdc\x1f\xb5\x15\x7f\x33\x2f\xb4\x8a\x1f\x7f\x75\xb1\xd0\x83\x62\x98\x80\x67\x4d\x60\x63\x99\x3b\x0f\x76\xa3\x25\xdc\x1e\x95\x0d\xda\x36\x97\xe0\x68\x44\x10\x33\xe2\xb3\xd5\xb9\x71\x14\x3d\x60\xfc\x35\x42\xc8\x82\xd3\xb9\xe5\x50\x4a\x94\x4e\xc1\xe1\x8f\x08\x9b\x10\x9b\xf3\xa0\x7c\xa1\x65\x9e\x01\x97\x4c\x64\xae\x34\x28\xc0\x26\xa5\xf2\x01\x7c\x50\x95\xc2\x95\xbf\x7f\x31\xcf\x8f\xf8\xeb\xdb\x20\xa0\x52\xa3\x85\xf2\x57\x81\x2a\xa1\x4e\x2f\xb0\x7e\xba\xc9\x71\x01\xc1\x6b\xc7\x90\x5b\x60\x1e\x4a\xa7\xd7\xe3\x73\x5e\x5b\x76\x80\xba\xe2\x7d\xa7\xf5\x3d\x97\xcc\x39\xb8\xb1\x02\xff\xbd\xbf\xbf\x09\x95\x0a\x75\xb8\xbd\xcd\x89\x50\x69\x14\x7a\xbd\x81\x7d\x50\x6e\x72\x7c\x05\x3d\x42\xa8\xcf\xab\x5b\xd8\xe4\xf2\xe4\x1b\x70\x5f\x12\xea\xea\xc8\xfc\x5f\x83\xc2\x8c\x71\x83\xf3\x9c\x4e\xc0\x48\x7d\xca\xe0\x1d\x33\xfa\x32\x94\x33\xc0\x69\xd9\x7b\x23\x05\x67\x8e\xa2\x61\x84\x90\x03\x09\xdc\x6b\x1b\x6e\x10\xca\x42\x7f\xe7\x2c\x01\xe9\x2a\x41\x28\xb3\x79\x05\xcb\x43\x66\x24\xf3\x50\x9b\xb7\x82\x0c\x47\x76\x3c\xbd\xe5\x0b\xa1\x26\xc4\x70\x8c\x15\xda\x0a\x7f\x1a\x07\x5a\x2e\xcb\x8c\x71\x95\x09\x09\x33\x4c\xb8\x15\x5e\x70\x26\x71\xad\xef\x3a\x0d\x5a\xbe\xaf\x3b\xe1\x78\x2d\xc1\x96\xec\x69\x45\x8c\x10\x41\x8f\x70\xa2\x08\x8f\x6b\xbc\x51\x9a\x6a\xe5\x56\x4a\x9e\x70\x4b\x0b\x21\x6d\x82\xb5\xb6\x14\xe1\xe9\x77\xe1\xbc\xc3\x57\x9c\x94\x91\x07\x86\xc5\xa1\x33\x56\x81\x87\x72\x4a\x32\x16\xe8\xf9\x0e\x87\x08\xc1\x7e\x0f\xdc\x53\x84\x97\x7a\xcb\x8f\x90\xe6\x12\x1a\x05\xae\x95\x67\x42\x81\x3d\x27\x42\xde\xe2\x4c\x75\x44\xc6\x0e\x40\x91\x65\x8a\x1f\xc1\x0e\xae\x6b\xd3\xe2\x53\xfc\x29\x1e\xfe\xd2\xb5\x5a\xe7\x52\xae\xb5\x14\xfc\x44\xd1\xdd\x7e\xa9\xfd\xda\x82\x83\x73\x71\x43\x50\x59\xc6\x54\xfa\x5c\x5a\xf2\x56\x34\x04\x39\xcf\xac\x6f\xfd\x27\x84\x6b\xb5\x17\x87\x96\x68\x00\x9e\x0f\x2a\x69\xfd\x13\x7f\x73\x5a\x9d\x35\xaa\x9d\xbb\x08\x7d\x76\x6d\xec\xaa\x1e\x95\x05\xa9\x94\x5a\xe5\xcd\x82\xfe\x9a\xf9\x23\xed\x00\x9c\x35\x40\x15\x7d\x67\xeb\xd5\x64\xb7\x1c\x2d\xa6\xdb\xf5\x68\x3c\x6d\x39\x2b\x98\xcc\x61\x66\x75\x46\x3b\x0d\xdc\x0b\x90\x69\xbd\xcb\x7a\xf2\x0a\xbb\x99\xa7\xf8\x3c\xd2\x3d\xd0\x2f\xd3\xf9\x7a\xba\xd9\xdd\x2d\x46\x9f\x7b\x98\xad\x4e\x8a\xc4\x32\x7b\x22\x49\xee\x4e\x89\xfe\x4e\x87\xf1\xcf\xc3\x78\x18\xb5\x4b\xf4\x8e\xea\x54\xf2\x05\x33\xdd\xd0\x7b\x14\xab\x9b\x75\xb9\xe3\xba\xef\xd1\xf3\xb6\xdb\x56\xf2\x72\xe0\x5f\xdd\x77\x61\xf9\x2b\xa5\x7d\x7b\x58\xdb\x8f\xd8\xc5\x70\x09\x47\x52\xd8\xb3\x5c\x7a\x52\x5e\x53\x84\xbd\xcd\x01\x47\x6d\x52\x37\xa5\x0a\x06\x2d\xa4\x2a\xf7\xfa\xad\x5a\xe8\x14\x28\xfa\x93\x09\x3f\xd3\x76\x26\xac\xf3\x63\xad\x5c\x9e\x81\x8d\x6c\xf5\xfd\xd0\x4c\xc0\x04\x24\x78\x28\x33\xaf\x1f\xa0\xa6\x64\xd1\xc5\x07\xd9\xab\x7b\xfd\xcc\xf6\x17\x56\x7a\x63\xd8\x22\x3e\x45\xff\x90\x73\x57\x7e\x5c\x50\x0b\x55\x1b\x28\x90\x6b\xc1\x0c\xa6\x0f\xbd\xfb\xbe\x45\xc7\x12\x53\x3c\x99\xce\x46\xbf\xcf\xef\x77\xeb\xd1\xfd\x97\xdd\x6c\xb5\xd9\x2d\x57\xcb\xdd\xfc\x6e\x7b\x3f\x9d\xec\x96\xab\xc9\x74\x8b\x3f\xbe\xec\x23\x64\xe5\x30\x7d\xc0\x1f\x7e\x34\x7e\xe6\xab\xf1\x68\xbe\xdb\xde\xaf\x36\xa3\xcf\xd3\xd2\xeb\xd3\x87\xf2\x1b\xa4\x7b\x9e\x7a\x92\x67\x9d\xa7\xe8\xdf\x00\x00\x00\xff\xff\x19\x70\x13\x3b\xe6\x0a\x00\x00")

func localStorageYamlBytes() ([]byte, error) {
	return bindataRead(
		_localStorageYaml,
		"local-storage.yaml",
	)
}

func localStorageYaml() (*asset, error) {
	bytes, err := localStorageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "local-storage.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAggregatedMetricsReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x31\x6b\xf4\x30\x0c\xc6\xf1\xdd\x9f\x42\x78\x7e\x93\x97\x6e\xc5\x6b\x87\xee\x1d\xba\x94\x1b\x94\xf8\x21\x27\xce\xb1\x83\x24\xe7\x68\x3f\x7d\xb9\x70\xdc\x58\x68\x27\x0d\x7f\x7e\x0f\xe8\x22\x35\x27\x7a\x29\xdd\x1c\xfa\xd6\x0a\x02\x6f\xf2\x0e\x35\x69\x35\x91\x4e\x3c\x8f\xdc\xfd\xdc\x54\xbe\xd8\xa5\xd5\xf1\xf2\x6c\xa3\xb4\xff\xfb\x53\x58\xe1\x9c\xd9\x39\x05\xa2\xca\x2b\x12\xd9\xa7\x39\xd6\xc4\xcb\xa2\x58\xd8\x91\x87\x15\xae\x32\xdb\xa0\xe0\x0c\x0d\x44\x85\x27\x14\xbb\x11\xfa\x61\xfd\xb1\x30\x78\x1b\x76\xc1\x35\x51\x74\xed\x88\xbf\x71\xc8\xe2\x7f\x71\x9c\x57\xa9\x0f\xa8\xbd\xc0\x52\x18\x88\x37\x79\xd5\xd6\x37\x4b\xf4\x11\xef\x7f\xdd\x7d\x3c\x05\x22\x85\xb5\xae\x33\x8e\xbe\xb5\x6c\xf1\x1f\xc5\xda\x32\xec\xc8\x3b\x74\x3a\xd2\x02\xbf\x95\x22\x76\xdc\x2b\xfb\x7c\x8e\xa7\xf0\x1d\x00\x00\xff\xff\xe5\x1d\x7a\x17\x89\x01\x00\x00")

func metricsServerAggregatedMetricsReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAggregatedMetricsReaderYaml,
		"metrics-server/aggregated-metrics-reader.yaml",
	)
}

func metricsServerAggregatedMetricsReaderYaml() (*asset, error) {
	bytes, err := metricsServerAggregatedMetricsReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/aggregated-metrics-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthDelegatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xbb\x4e\xc4\x40\x0c\x45\xfb\xf9\x8a\xf9\x81\x09\xda\x0e\xb9\x03\x0a\xfa\x45\xa2\x77\x26\x97\xc5\x24\x19\x47\xb6\x27\x12\x7c\x3d\x5a\x11\xd1\xf0\x68\xaf\x74\xcf\x39\xa5\x94\xc4\x9b\x3c\xc3\x5c\xb4\x51\xb6\x91\xeb\xc0\x3d\x5e\xd5\xe4\x83\x43\xb4\x0d\xf3\xad\x0f\xa2\x37\xfb\x69\x44\xf0\x29\xcd\xd2\x26\xca\x0f\x4b\xf7\x80\x9d\x75\xc1\xbd\xb4\x49\xda\x25\xad\x08\x9e\x38\x98\x52\xce\x8d\x57\x50\x5e\x11\x26\xd5\x8b\xc3\x76\x18\xf9\xbb\x07\x56\xba\xd2\xcb\x84\x05\x17\x0e\xb5\x64\xba\xe0\x8c\x97\xeb\x8b\x37\x79\x34\xed\xdb\x3f\x19\x29\xe7\x1f\x01\xdf\xbe\xdf\x05\xde\xc7\x37\xd4\x70\x4a\xe5\xf8\x3e\xc1\x76\xa9\xb8\xab\x55\x7b\x8b\x3f\x72\x8f\xd9\x37\xae\xa0\x3c\xf7\x11\xe5\x8b\x9f\x3e\x03\x00\x00\xff\xff\x69\xfc\x98\x93\x34\x01\x00\x00")

func metricsServerAuthDelegatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthDelegatorYaml,
		"metrics-server/auth-delegator.yaml",
	)
}

func metricsServerAuthDelegatorYaml() (*asset, error) {
	bytes, err := metricsServerAuthDelegatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-delegator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x3d\x4e\xc4\x40\x0c\x46\xfb\x39\xc5\x5c\xc0\x41\xdb\xa1\xe9\xa0\xa1\x5f\x24\x7a\x67\xf2\x01\x26\x1b\x4f\x64\x7b\x22\xe0\xf4\x28\x68\xf9\x69\x76\x7b\xfb\x7d\xef\x11\x51\xe2\x55\x9e\x60\x2e\x4d\x4b\xb6\x91\xeb\xc0\x3d\x5e\x9b\xc9\x27\x87\x34\x1d\xe6\x5b\x1f\xa4\xdd\x6c\x87\x11\xc1\x87\x34\x8b\x4e\x25\x1f\xdb\x09\xf7\xa2\x93\xe8\x4b\x5a\x10\x3c\x71\x70\x49\x39\x2b\x2f\x28\x79\x41\x98\x54\x27\x87\x6d\x30\xda\x79\x64\xe0\x09\x76\x3e\xf1\x95\x2b\x4a\x9e\xfb\x08\xf2\x0f\x0f\x2c\xc9\xda\x09\x47\x3c\xef\x10\x5e\xe5\xc1\x5a\x5f\xaf\xe8\xa4\x9c\xff\x44\x7e\x77\xf1\x1e\xd0\x3d\x84\x78\x95\x7f\xe3\xd0\x90\xfa\xfd\xfe\xa3\xe1\x7d\x7c\x43\x0d\x2f\x89\xce\xa0\x47\xd8\x26\x15\x77\xb5\xb6\xae\x71\x21\xe5\xb2\xfe\x57\x00\x00\x00\xff\xff\xc7\x9e\x8d\xd1\x49\x01\x00\x00")

func metricsServerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthReaderYaml,
		"metrics-server/auth-reader.yaml",
	)
}

func metricsServerAuthReaderYaml() (*asset, error) {
	bytes, err := metricsServerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsApiserviceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x6a\xc4\x30\x0c\x85\xf7\x3e\x85\x2e\xe0\x74\xb2\x2b\xde\x75\x59\x68\x61\x20\x65\xf6\x1a\x8f\x3a\x08\xe3\x1f\x24\x39\x90\xdb\x97\x30\x71\xba\x13\x7a\xef\xfb\x90\xbc\xf7\x0e\x1b\xdf\x48\x94\x6b\x09\x80\x8d\x85\x9e\xac\x26\x68\x5c\xcb\x94\xde\x75\xe2\xfa\xb6\xce\x77\x32\x9c\x5d\xe2\xf2\x08\xf0\x71\xfd\x5c\x48\x56\x8e\xe4\x32\x19\x3e\xd0\x30\x38\x80\x82\x99\x02\x1c\xd5\x29\x93\x09\x47\x3d\x0c\x4e\x1b\xc5\xbd\xa4\x2f\x70\x1f\x07\x71\x34\xfd\x1e\x91\x9c\x81\x36\x8c\x14\x20\xf5\x3b\x79\xdd\xd4\x28\x3b\x80\xa7\xd4\xde\x4e\x64\xc8\x01\xd6\xf1\xc0\xb8\x14\x80\x8b\x52\xec\x42\x4b\xe2\xf6\xf3\xb5\xdc\x48\xf8\x77\x0b\x60\xd2\x69\x88\xae\xc2\x55\xd8\xb6\x6f\x2e\x9c\x7b\x0e\x30\x5f\x2e\xff\xb2\x91\xbe\xd6\x7f\x01\x00\x00\xff\xff\x25\x03\x92\xf5\x2a\x01\x00\x00")

func metricsServerMetricsApiserviceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsApiserviceYaml,
		"metrics-server/metrics-apiservice.yaml",
	)
}

func metricsServerMetricsApiserviceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsApiserviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-apiservice.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x4f\x8b\x13\x41\x10\xc5\xef\xf3\x29\x1e\xe3\xb9\x13\x45\x10\xe9\xdb\xb2\xeb\x4d\xa3\xb0\xe0\xbd\xb6\xa7\x62\x9a\xf4\x3f\xaa\x2a\xd1\x41\xfc\xee\x32\x3b\x49\x4c\x76\x37\x22\x58\xc7\x9e\xf7\xaa\x7e\x6f\x9e\x73\xae\xa3\x16\xbf\xb2\x68\xac\xc5\x63\xff\xa6\xdb\xc6\x32\x78\xdc\xb3\xec\x63\xe0\x9b\x10\xea\xae\x58\x97\xd9\x68\x20\x23\xdf\x01\x85\x32\x7b\x64\x36\x89\x41\x9d\xb2\xec\x59\x0e\xcf\xda\x28\xb0\xc7\x76\xf7\xc0\x4e\x47\x35\xce\xdd\xd3\x0b\xd4\x9a\x2e\x4f\x67\xee\xb8\xa5\x3a\x66\xfe\xaf\x13\x40\xa2\x07\x4e\x3a\x39\x81\xed\x7b\x75\xd4\xda\x33\xbb\x36\x0e\x93\x42\x39\x71\xb0\x2a\xb3\x3a\x93\x85\xcd\xc7\x33\xfb\xf5\x05\x80\x71\x6e\x89\x8c\x0f\xd6\x33\xe0\x69\xae\x40\x4f\x93\x2e\x0e\xfc\xed\x04\x70\xe4\x9c\xa6\x49\xac\x12\x6d\xbc\x4d\xa4\xba\x7a\xdc\xdf\xcf\xa1\x5d\xa9\x03\xbb\x20\xd1\x62\xa0\xd4\x1f\xf4\x7a\xd1\xda\xea\x3a\x90\xd5\xc4\x42\x16\x6b\x39\xa3\x72\xd8\xf2\xe8\xd1\xdf\x1e\xb6\xde\x0c\x43\x2d\xfa\xb9\xa4\xb1\x3f\x69\x80\xda\x26\x67\x15\x8f\xfe\xc3\x8f\xa8\xa6\xfd\xb3\x05\x8f\x6c\x52\x13\x2f\xa6\x9a\xa4\xb0\xb1\x2e\x62\x5d\x66\x52\x63\xf9\xc7\x65\x00\xaf\xd7\x1c\xcc\xa3\x5f\xd5\xfb\xb0\xe1\x61\x97\xf8\xf8\x79\x5f\xd3\x2e\xf3\x89\xfd\x15\xf2\x14\x18\xb1\xc0\x72\x83\x56\x7c\x67\x04\x2a\x50\x5a\x73\x1a\xb1\x53\xc6\x5a\x6a\x76\x1a\x64\x2a\x1c\x31\xd3\x37\x56\x50\x19\x96\x55\x20\x4c\x83\xab\x25\x8d\x08\xb5\x18\xc5\xc2\xa2\xdd\x31\xd2\x5c\xab\xe5\xe6\x86\x28\x27\x3a\xce\xcd\xc6\xbb\x28\x1e\x3f\x7f\x1d\x1e\xff\x78\xfd\x13\xf3\x8b\x15\x60\x86\xf0\x10\x2a\x61\xc3\xb2\xbc\x54\xf9\xfd\xeb\xc5\xdb\xc5\xbb\x93\x78\x4e\xfc\x69\x8a\x79\x51\xd9\xcb\x78\x98\x7f\xc8\x17\xb2\x8d\xc7\xd2\x72\xeb\xba\xdf\x01\x00\x00\xff\xff\x99\xb2\xda\xda\xeb\x03\x00\x00")

func metricsServerMetricsServerDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerDeploymentYaml,
		"metrics-server/metrics-server-deployment.yaml",
	)
}

func metricsServerMetricsServerDeploymentYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x26\xf7\x28\xe2\x1e\x24\x57\xcf\xc2\x82\xe2\xbd\x37\x5b\x48\x98\xfc\xd1\xdd\x33\xe0\xdb\xcb\xc4\x41\x10\xe6\xd6\x54\x57\x7d\x55\x21\x04\xc7\x23\x7f\x42\x34\xf7\x16\x69\x7b\x72\x4b\x6e\xf7\x48\xef\x90\x2d\x27\xb8\x0a\xe3\x3b\x1b\x47\x47\xd4\xb8\x22\x52\x85\x49\x4e\x1a\x14\xb2\x41\x0e\x59\x07\x27\x44\x5a\xd6\x1b\x82\x7e\xab\xa1\x3a\xa2\xc2\x37\x14\xdd\x93\x34\x3f\xd2\x60\xd0\x87\xdc\x1f\x7f\x49\xfe\xed\x1f\xca\x9f\x18\x53\x59\xd5\x20\xd3\x91\xf7\x06\x6f\xb2\xc2\x3b\x1d\x48\x3b\x58\x51\x90\xac\xcb\x51\xf2\xa2\x81\xc7\x38\xd9\x38\xba\xd8\x5c\x12\xe6\x19\xe9\x72\x79\x9e\x91\x21\xdd\x7a\xea\x25\xd2\xc7\xeb\x75\x2a\xc6\xf2\x05\xbb\xfe\xb9\x7e\x02\x00\x00\xff\xff\x92\x19\xf9\x3e\x23\x01\x00\x00")

func metricsServerMetricsServerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerServiceYaml,
		"metrics-server/metrics-server-service.yaml",
	)
}

func metricsServerMetricsServerServiceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerResourceReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7c\x0a\xeb\xf6\xf4\xc4\x86\xb2\x01\x03\xfb\x21\xb1\xbb\xa9\xb9\x33\x6d\xe3\xca\x76\x8a\xe0\xd3\xa3\x6b\xcb\x1f\x81\x74\x42\x62\xca\x4b\xe2\x9f\x9f\xde\x8b\x31\x06\x9c\xf8\x91\xd4\x58\x4a\x02\x6d\x31\x37\x58\xfd\x24\xca\x6f\xe8\x2c\xa5\xe9\xaf\xad\x61\xd9\xcf\x57\xa1\xe7\xd2\x25\xb8\x1b\xaa\x39\xe9\x41\x06\x0a\x23\x39\x76\xe8\x98\x02\x40\xc1\x91\x12\xd8\xab\x39\x8d\x69\x24\x57\xce\x16\x8d\x74\x26\x0d\x5a\x07\xb2\x14\x22\xe0\xc4\xf7\x2a\x75\xb2\x33\x11\x61\xb7\x0b\x00\x4a\x26\x55\x33\x6d\x6f\x93\x74\xb6\x88\x22\x1d\x7d\x53\x7b\x73\xf4\xed\x8e\x23\xd9\x84\x79\xf9\x9e\x49\xdb\x0d\x3d\x92\x2f\xe7\xc0\xb6\x8a\x17\xf4\x7c\x0a\xff\x0b\x79\xcb\xa5\xe3\x72\xfc\x7b\x56\x19\xe8\x40\x4f\xe7\xb1\x8f\xb4\x17\x2c\x03\xc0\xef\x5a\x2f\x1b\x58\x6d\x9f\x29\xfb\xd2\xe7\xca\x3e\x90\xce\x9c\xe9\x26\x67\xa9\xc5\x3f\xf1\x1f\x1c\x7c\xf5\x96\xa0\xaf\x2d\xc5\x75\x7f\x78\x0f\x00\x00\xff\xff\x39\x82\xcc\x46\x05\x02\x00\x00")

func metricsServerResourceReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerResourceReaderYaml,
		"metrics-server/resource-reader.yaml",
	)
}

func metricsServerResourceReaderYaml() (*asset, error) {
	bytes, err := metricsServerResourceReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/resource-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x21\xbb\x72\x38\xdc\x72\xf0\xd8\x0e\xdd\x03\xb4\x3b\x6d\xb3\x09\x6b\x59\x14\x48\x2a\x41\xfb\xeb\x0b\xa7\x6e\x82\xa4\x76\x90\xb4\xdd\x24\x41\x7c\x1f\x1f\xf9\x20\xd3\x13\x8a\x12\xa7\xca\x4b\x0d\xcd\x12\x8a\x6d\x58\xe8\x0d\x8c\x38\x2d\xbb\xff\xba\x24\xfe\xb3\xfd\xeb\x3a\x4a\x6d\xe5\xef\x63\x51\x43\x59\x71\xc4\x3b\x4a\x2d\xa5\xb5\xeb\xd1\xa0\x05\x83\xca\x79\x9f\xa0\xc7\xca\x77\xa5\xc6\x00\x99\x14\x65\x8b\x12\x86\x6b\x44\x0b\xd0\xf6\x94\x9c\x70\xc4\x15\x3e\x0f\xbf\x21\xd3\x83\x70\xc9\x17\xc8\xce\xfb\x2f\xe0\x03\x47\x5f\xd5\xb0\xaf\x0e\xfa\x99\x46\x86\x96\xfa\x05\x1b\xd3\xca\x85\x9b\x20\x8f\x8a\x32\xe3\xc2\xb9\x10\x82\xfb\xfe\xb4\x26\xc6\xf4\xd9\xfe\x3f\x0d\x0d\x27\x13\x8e\x11\xc5\x49\x89\x78\xd2\xb8\x0e\x15\xc1\x2f\x16\xce\x7b\x41\xe5\x22\x0d\x8e\x6f\x89\x5b\x54\xe7\xfd\x16\xa5\x1e\x9f\xd6\x68\x57\xd6\x42\x8f\x9a\xa1\x39\x17\x88\xa4\xb6\x3f\xec\xc0\x9a\xcd\x84\x56\x42\xdb\xb1\x74\x94\xd6\xa3\xdf\x29\xf1\x8f\x3f\x99\x23\x35\x74\x33\x61\x42\x10\x53\x9b\x99\x92\xe9\xfe\x96\xb9\x9d\xd3\x1c\xfc\x1f\xb5\x7f\xb8\xb4\xf9\x88\xcf\xec\xee\xf7\xb3\x7d\x0a\x38\x06\x7b\xf0\x78\x1d\xe3\x2c\xdc\x97\x01\xef\x01\x00\x00\xff\xff\x46\xd3\x6d\x9d\x0f\x04\x00\x00")

func rolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingsYaml,
		"rolebindings.yaml",
	)
}

func rolebindingsYaml() (*asset, error) {
	bytes, err := rolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rolebindings.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _traefikYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x8f\xd3\x30\x10\xc5\xef\xf9\x14\xa3\x48\x7b\x4c\x42\x6f\xc8\xb7\xa5\x54\x02\x21\x95\x15\x05\xae\x68\xe2\xbc\x36\x56\x1d\x3b\x9a\x99\x54\x84\x3f\xdf\x1d\x25\x5b\xba\x08\x81\xb4\xbe\x79\xfc\x7b\xcf\xcf\x4f\xe6\x31\x7c\x86\x68\xc8\xc9\x51\x8f\x38\xd4\x9e\xcd\x22\xea\x90\x9b\xcb\xa6\x38\x87\xd4\x39\x7a\x83\x38\x6c\x7b\x16\x2b\x06\x18\x77\x6c\xec\x0a\xa2\xc4\x03\x1c\x99\x30\x8e\xe1\x7c\xdd\xeb\xc8\x1e\x8e\xce\x53\x8b\x4a\x67\x35\x0c\x85\x8e\xf0\x0b\xee\x17\x03\x47\xbd\xd9\xa8\xae\x69\xee\xbe\xbf\xfb\xf4\x6a\xf7\x61\xbf\xfb\xb8\x3b\x7c\xb9\x7f\x78\xfb\xf3\xae\x51\x63\x0b\xbe\x59\x41\x6d\xae\xc6\xd5\xa6\x7e\xb9\xa9\x5f\xd4\x76\xfa\x56\x10\x5d\x38\x4e\xd0\x6d\x4e\x86\x64\x8e\x7e\x54\x05\x11\x91\xb4\xbc\x5e\xb1\x2c\x24\x6e\x23\xba\x25\xd8\x84\x75\xa6\x1a\xff\x7f\x38\xc0\x24\x78\xfd\x0d\x8c\x92\x07\x58\x8f\xe9\x36\xf9\x97\x68\x79\x9e\x24\x18\x6e\x54\x48\x27\x81\xea\x2e\x75\x63\x0e\xc9\x9e\xc4\x93\xe2\x35\x8e\x3c\x45\x7b\x98\xda\x18\xb4\x47\x77\x80\x5c\x82\xc7\x1f\x7e\xa3\x84\x2c\xc1\xe6\x6d\x64\xd5\xfd\x5a\x6b\xf9\xd8\x5e\xe5\xe3\xa4\x06\xa9\xbc\x04\x0b\x9e\x63\xb9\x0a\xc2\xc0\xa7\x05\x12\x4e\xbe\x87\x34\x31\xb4\xc2\x32\x57\xd7\xce\x1e\x21\xcb\x11\xc2\x16\x72\xba\xc5\xac\xe8\x8c\xd9\x51\xb9\xbd\xba\xdd\x77\x5d\x4e\xfa\x3e\xc5\xb9\xbc\x25\xce\xe3\xa2\xca\xe2\xa8\xdc\x7d\x0d\x6a\x5a\xfe\x25\x4e\xb9\x43\x25\x39\xa2\x7e\xea\x61\xf9\x2e\x03\x2f\x49\x9f\x61\x44\x84\xe3\x11\xde\x1c\x95\xfb\x7c\xf0\x3d\xba\x29\xa2\x2c\x7e\x05\x00\x00\xff\xff\x82\xe7\xc7\x94\x8a\x02\x00\x00")

func traefikYamlBytes() ([]byte, error) {
	return bindataRead(
		_traefikYaml,
		"traefik.yaml",
	)
}

func traefikYaml() (*asset, error) {
	bytes, err := traefikYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "traefik.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ccm.yaml":           ccmYaml,
	"coredns.yaml":       corednsYaml,
	"local-storage.yaml": localStorageYaml,
	"metrics-server/aggregated-metrics-reader.yaml": metricsServerAggregatedMetricsReaderYaml,
	"metrics-server/auth-delegator.yaml":            metricsServerAuthDelegatorYaml,
	"metrics-server/auth-reader.yaml":               metricsServerAuthReaderYaml,
	"metrics-server/metrics-apiservice.yaml":        metricsServerMetricsApiserviceYaml,
	"metrics-server/metrics-server-deployment.yaml": metricsServerMetricsServerDeploymentYaml,
	"metrics-server/metrics-server-service.yaml":    metricsServerMetricsServerServiceYaml,
	"metrics-server/resource-reader.yaml":           metricsServerResourceReaderYaml,
	"rolebindings.yaml":                             rolebindingsYaml,
	"traefik.yaml":                                  traefikYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ccm.yaml":           &bintree{ccmYaml, map[string]*bintree{}},
	"coredns.yaml":       &bintree{corednsYaml, map[string]*bintree{}},
	"local-storage.yaml": &bintree{localStorageYaml, map[string]*bintree{}},
	"metrics-server": &bintree{nil, map[string]*bintree{
		"aggregated-metrics-reader.yaml": &bintree{metricsServerAggregatedMetricsReaderYaml, map[string]*bintree{}},
		"auth-delegator.yaml":            &bintree{metricsServerAuthDelegatorYaml, map[string]*bintree{}},
		"auth-reader.yaml":               &bintree{metricsServerAuthReaderYaml, map[string]*bintree{}},
		"metrics-apiservice.yaml":        &bintree{metricsServerMetricsApiserviceYaml, map[string]*bintree{}},
		"metrics-server-deployment.yaml": &bintree{metricsServerMetricsServerDeploymentYaml, map[string]*bintree{}},
		"metrics-server-service.yaml":    &bintree{metricsServerMetricsServerServiceYaml, map[string]*bintree{}},
		"resource-reader.yaml":           &bintree{metricsServerResourceReaderYaml, map[string]*bintree{}},
	}},
	"rolebindings.yaml": &bintree{rolebindingsYaml, map[string]*bintree{}},
	"traefik.yaml":      &bintree{traefikYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
